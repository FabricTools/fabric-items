//----------------------
// <auto-generated>
//     Generated using FabricTools.Items.CodeGeneration 1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0) (http://github.com/FabricTools)
// </auto-generated>
//----------------------


#nullable enable


namespace FabricTools.Items.Report.Definitions;

#pragma warning disable // Disable all warnings

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainer")]
public partial class FilterConfigurationFilterContainer
{
    /// <summary>
    /// A unique name (across the whole report definition) defined for this filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// An alternate name to use when displaying this filter - by default the display name of the field will be used, if there is no field or display name,
    /// <br/>then restatement of the filter will be shown. Only applies to certain filter types.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string DisplayName { get; set; } = default!;

    /// <summary>
    /// Defines the ordering of this filter w.r.t. other filters - only applies when Custom sort order is set.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("ordinal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Ordinal { get; set; } = default!;

    /// <summary>
    /// Defines the field from your data that is filtered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public QueryExpressionContainer Field { get; set; } = default!;

    /// <summary>
    /// The type of a filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterConfigurationFilterContainerType Type { get; set; } = default!;

    /// <summary>
    /// Defines the actual filter definition - it is dependent on the type of filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterDefinition Filter { get; set; } = default!;

    /// <summary>
    /// A custom restatement to show for the filter - only applies to Passthrough filter type. For all other filters, a restatement is generated based on the filter definition.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("restatement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string Restatement { get; set; } = default!;

    /// <summary>
    /// Specifies how this filter was first created.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("howCreated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterConfigurationFilterContainerHowCreated HowCreated { get; set; } = default!;

    /// <summary>
    /// Defines whether to hide this filter when viewing the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isHiddenInViewMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsHiddenInViewMode { get; set; } = default!;

    /// <summary>
    /// Defines whether the filter value can be changed when viewing the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isLockedInViewMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsLockedInViewMode { get; set; } = default!;

    /// <summary>
    /// Formatting for different "objects" of a filter card
    /// </summary>
    [Newtonsoft.Json.JsonProperty("objects", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterConfigurationFilterContainerFormattingObjects Objects { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainerFormattingObjects")]
public partial class FilterConfigurationFilterContainerFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("general", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<FilterConfigurationFilterContainerFormattingObjectsGeneral> General { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainerFormattingObjectsProperties")]
public partial class FilterConfigurationFilterContainerFormattingObjectsProperties
{
    [Newtonsoft.Json.JsonProperty("requireSingleSelect", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken RequireSingleSelect { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("isInvertedSelectionMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken IsInvertedSelectionMode { get; set; } = default!;


}

/// <summary>
/// Defines the configuration of filters.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json")]
public partial class FilterConfiguration
{
    /// <summary>
    /// Defines the definitions and metadata for the filters.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filters", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<FilterConfigurationFilterContainer> Filters { get; set; } = default!;

    /// <summary>
    /// Defines how the filters sorted - by name or custom sorting
    /// <br/>If custom sorting, then ordinal property of every filter is used as the sort order,
    /// <br/>filters where ordinal is skipped will be shown at the end; ordering will fallback to display name of the field.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterSortOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterConfigurationFilterSortOrder FilterSortOrder { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainer/type")]
public enum FilterConfigurationFilterContainerType
{

    [System.Runtime.Serialization.EnumMember(Value = @"Categorical")]
    /// <summary>Categorical</summary>
    Categorical,

    [System.Runtime.Serialization.EnumMember(Value = @"Range")]
    /// <summary>Range</summary>
    Range,

    [System.Runtime.Serialization.EnumMember(Value = @"Advanced")]
    /// <summary>Advanced</summary>
    Advanced,

    [System.Runtime.Serialization.EnumMember(Value = @"Passthrough")]
    /// <summary>Passthrough</summary>
    Passthrough,

    [System.Runtime.Serialization.EnumMember(Value = @"TopN")]
    /// <summary>TopN</summary>
    TopN,

    [System.Runtime.Serialization.EnumMember(Value = @"Include")]
    /// <summary>Include</summary>
    Include,

    [System.Runtime.Serialization.EnumMember(Value = @"Exclude")]
    /// <summary>Exclude</summary>
    Exclude,

    [System.Runtime.Serialization.EnumMember(Value = @"RelativeDate")]
    /// <summary>RelativeDate</summary>
    RelativeDate,

    [System.Runtime.Serialization.EnumMember(Value = @"Tuple")]
    /// <summary>Tuple</summary>
    Tuple,

    [System.Runtime.Serialization.EnumMember(Value = @"RelativeTime")]
    /// <summary>RelativeTime</summary>
    RelativeTime,

    [System.Runtime.Serialization.EnumMember(Value = @"VisualTopN")]
    /// <summary>VisualTopN</summary>
    VisualTopN,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainer/howCreated")]
public enum FilterConfigurationFilterContainerHowCreated
{

    [System.Runtime.Serialization.EnumMember(Value = @"Auto")]
    /// <summary>Created automatically when a field is used in the visual.</summary>
    Auto,

    [System.Runtime.Serialization.EnumMember(Value = @"User")]
    /// <summary>Filters created from fields not used in a visual by the user.</summary>
    User,

    [System.Runtime.Serialization.EnumMember(Value = @"Drill")]
    /// <summary>Created when drilling down on a data point in a visual.</summary>
    Drill,

    [System.Runtime.Serialization.EnumMember(Value = @"Include")]
    /// <summary>Created by including a data point in a visual.</summary>
    Include,

    [System.Runtime.Serialization.EnumMember(Value = @"Exclude")]
    /// <summary>Created by excluding a data point from a visual.</summary>
    Exclude,

    [System.Runtime.Serialization.EnumMember(Value = @"Drillthrough")]
    /// <summary>Created by drill context that is applied to the page when using drill-through
    /// <br/>action from another page.</summary>
    Drillthrough,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "definitions:FilterContainerFormattingObjects/general")]
public partial class FilterConfigurationFilterContainerFormattingObjectsGeneral
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public FilterConfigurationFilterContainerFormattingObjectsProperties Properties { get; set; } = new FilterConfigurationFilterContainerFormattingObjectsProperties();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/filterConfiguration/1.0.0/schema-embedded.json", "filterSortOrder")]
public enum FilterConfigurationFilterSortOrder
{

    [System.Runtime.Serialization.EnumMember(Value = @"Ascending")]
    /// <summary>Sorted ascending by display name of the filter field.</summary>
    Ascending,

    [System.Runtime.Serialization.EnumMember(Value = @"Descending")]
    /// <summary>Sorted descending by display name of the filter field.</summary>
    Descending,

    [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
    /// <summary>Sorted ascending by ordinal property of filters.</summary>
    Custom,

}