//----------------------
// <auto-generated>
//     Generated using FabricTools.Items.CodeGeneration 1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0) (http://github.com/FabricTools)
// </auto-generated>
//----------------------


#nullable enable


namespace FabricTools.Items.Report.Definitions;

#pragma warning disable // Disable all warnings

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Query")]
public partial class VisualConfigurationQuery
{
    /// <summary>
    /// Defines how the data should be sorted in a visual
    /// </summary>
    [Newtonsoft.Json.JsonProperty("sortDefinition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationSortDefinition? SortDefinition { get; set; } = default!;

    /// <summary>
    /// Specific options to apply when running the query. Applies to certain visuals only.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("options", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationVisualQueryOptions? Options { get; set; } = default!;

    /// <summary>
    /// Describes how the data should be arranged and used in the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("queryState", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.IDictionary<string, VisualConfigurationProjectionState> QueryState { get; set; } = new System.Collections.Generic.Dictionary<string, VisualConfigurationProjectionState>();

    /// <summary>
    /// Should drill be allowed in the visual - only used by specific custom visuals.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isDrillDisabled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsDrillDisabled { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:SortDefinition")]
public partial class VisualConfigurationSortDefinition
{
    /// <summary>
    /// Defines the fields the data is sorted by.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("sort", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationQuerySort>? Sort { get; set; } = default!;

    /// <summary>
    /// If the sort if explicitly set by user, then this will be false, Power BI can update the sort to match
    /// <br/>the visual in this case.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isDefaultSort", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsDefaultSort { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:QuerySort")]
public partial class VisualConfigurationQuerySort
{
    /// <summary>
    /// Field to sort by
    /// </summary>
    [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public QueryExpressionContainer Field { get; set; } = new QueryExpressionContainer();

    /// <summary>
    /// Direction of sort - ascending or descending.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("direction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public VisualConfigurationSortDirection Direction { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:SortDirection")]
public enum VisualConfigurationSortDirection
{

    [System.Runtime.Serialization.EnumMember(Value = @"Ascending")]
    /// <summary>Sort smallest to biggest.</summary>
    Ascending,

    [System.Runtime.Serialization.EnumMember(Value = @"Descending")]
    /// <summary>Sort biggest to smallest.</summary>
    Descending,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualQueryOptions")]
public partial class VisualConfigurationVisualQueryOptions
{
    /// <summary>
    /// A better sampling for line charts.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("allowBinnedLineSample", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? AllowBinnedLineSample { get; set; } = default!;

    /// <summary>
    /// A better sampling for scatter charts.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("allowOverlappingPointsSample", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? AllowOverlappingPointsSample { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:ProjectionState")]
public partial class VisualConfigurationProjectionState
{
    /// <summary>
    /// Show all values for all fields in this projection.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("showAll", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? ShowAll { get; set; } = default!;

    /// <summary>
    /// Defines the fields and their properties for this visual role.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("projections", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.ICollection<VisualConfigurationRoleProjection> Projections { get; set; } = new System.Collections.ObjectModel.Collection<VisualConfigurationRoleProjection>();

    /// <summary>
    /// Defines any field parameters used as projections.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("fieldParameters", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationRoleFieldParameter>? FieldParameters { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:RoleProjection")]
public partial class VisualConfigurationRoleProjection
{
    /// <summary>
    /// The data field from the semantic model.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public QueryExpressionContainer Field { get; set; } = new QueryExpressionContainer();

    /// <summary>
    /// A unique name for this field - unique per visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("queryRef", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string QueryRef { get; set; } = default!;

    /// <summary>
    /// Native reference name for this field - unique per visual, used for referencing fields in visual calculations.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("nativeQueryRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string? NativeQueryRef { get; set; } = default!;

    /// <summary>
    /// An override for display name - by default it is the field name in the semantic model.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string? DisplayName { get; set; } = default!;

    /// <summary>
    /// format string scoped to the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("format", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.StringLength(255)]
    public string? Format { get; set; } = default!;

    /// <summary>
    /// Is the field currently active in the visual - used as part of drill operations.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("active", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? Active { get; set; } = default!;

    /// <summary>
    /// Is the field visible in the visual - used as part of visual calculations.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("hidden", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? Hidden { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:RoleFieldParameter")]
public partial class VisualConfigurationRoleFieldParameter
{
    /// <summary>
    /// Defines the parameter field.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("parameterExpr", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public QueryExpressionContainer ParameterExpr { get; set; } = new QueryExpressionContainer();

    /// <summary>
    /// Index at which parameter fields begin in the projections list.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("index", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Index { get; set; } = default!;

    /// <summary>
    /// Number of fields replaced by the parameter in the projections list.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("length", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double? Length { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:ExpansionState")]
public partial class VisualConfigurationExpansionState
{
    /// <summary>
    /// Visual roles (projection names) that have individual points expanded.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("roles", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.ICollection<string> Roles { get; set; } = new System.Collections.ObjectModel.Collection<string>();

    /// <summary>
    /// Defines the specific values that are expanded for each field in the hierarchy
    /// </summary>
    [Newtonsoft.Json.JsonProperty("root", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationRootExpansionState? Root { get; set; } = default!;

    /// <summary>
    /// Describes the fields participating in the expansion
    /// </summary>
    [Newtonsoft.Json.JsonProperty("levels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationLevelExpansionState>? Levels { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:RootExpansionState")]
public partial class VisualConfigurationRootExpansionState
{
    /// <summary>
    /// Describes the instances that are expanded.
    /// <br/>Optional for the root expansion state.
    /// <br/>Must by Literal expressions.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("identityValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<QueryExpressionContainer>? IdentityValues { get; set; } = default!;

    /// <summary>
    /// True if the value is expanded.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isToggled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsToggled { get; set; } = false;

    /// <summary>
    /// Child values in the hierarchy that are expanded
    /// </summary>
    [Newtonsoft.Json.JsonProperty("children", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationNodeExpansionState>? Children { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:NodeExpansionState")]
public partial class VisualConfigurationNodeExpansionState
{
    /// <summary>
    /// Describes the instances that are expanded.
    /// <br/>Must by Literal expressions.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("identityValues", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.ICollection<QueryExpressionContainer> IdentityValues { get; set; } = new System.Collections.ObjectModel.Collection<QueryExpressionContainer>();

    /// <summary>
    /// True if the value is expanded.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isToggled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsToggled { get; set; } = false;

    /// <summary>
    /// Child values in the hierarchy that are expanded
    /// </summary>
    [Newtonsoft.Json.JsonProperty("children", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationNodeExpansionState>? Children { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:LevelExpansionState")]
public partial class VisualConfigurationLevelExpansionState
{
    /// <summary>
    /// Describes the fields in the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("identityKeys", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<QueryExpressionContainer>? IdentityKeys { get; set; } = default!;

    /// <summary>
    /// True if the entire field isn't expanded (i.e. false if only specific instances are expanded).
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isCollapsed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsCollapsed { get; set; } = default!;

    /// <summary>
    /// Which fields in the query does this relate to - must match a queryRef in the query.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("queryRefs", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.ICollection<string> QueryRefs { get; set; } = new System.Collections.ObjectModel.Collection<string>();

    /// <summary>
    /// Is the field pinned.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isPinned", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsPinned { get; set; } = default!;

    /// <summary>
    /// Is the field locked (used for decomposition tree)
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isLocked", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? IsLocked { get; set; } = default!;

    /// <summary>
    /// More information about how the expansion is done (used for decomposition tree)
    /// </summary>
    [Newtonsoft.Json.JsonProperty("AIInformation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationAILevelInformation? AIInformation { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:AILevelInformation")]
public partial class VisualConfigurationAILevelInformation
{
    /// <summary>
    /// Type of expansion.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("method", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public VisualConfigurationAIDecompositionMethod Method { get; set; } = default!;

    /// <summary>
    /// Is the level disabled.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("disabled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? Disabled { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:AIDecompositionMethod")]
public enum VisualConfigurationAIDecompositionMethod
{

    [System.Runtime.Serialization.EnumMember(Value = @"BestSplit")]
    BestSplit = 0,

    [System.Runtime.Serialization.EnumMember(Value = @"MaxSplit")]
    MaxSplit = 1,

    [System.Runtime.Serialization.EnumMember(Value = @"MinSplit")]
    MinSplit = 2,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects")]
public partial class VisualConfigurationVisualContainerFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("title", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsTitle>? Title { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("subTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsSubTitle>? SubTitle { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("divider", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsDivider>? Divider { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("spacing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsSpacing>? Spacing { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsBackground>? Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("padding", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsPadding>? Padding { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("lockAspect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsLockAspect>? LockAspect { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("general", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsGeneral>? General { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("border", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsBorder>? Border { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("dropShadow", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsDropShadow>? DropShadow { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("visualLink", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsVisualLink>? VisualLink { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("visualTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsVisualTooltip>? VisualTooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("stylePreset", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsStylePreset>? StylePreset { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("visualHeader", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsVisualHeader>? VisualHeader { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("visualHeaderTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationVisualContainerFormattingObjectsVisualHeaderTooltip>? VisualHeaderTooltip { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Title")]
public partial class VisualConfigurationTitle
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Text { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("heading", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Heading { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("titleWrap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? TitleWrap { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("alignment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Alignment { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontSize { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bold { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("italic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Italic { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("underline", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Underline { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontFamily", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontFamily { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:SubTitle")]
public partial class VisualConfigurationSubTitle
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Text { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("heading", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Heading { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("titleWrap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? TitleWrap { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("alignment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Alignment { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontSize { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bold { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("italic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Italic { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("underline", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Underline { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontFamily", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontFamily { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Divider")]
public partial class VisualConfigurationDivider
{
    [Newtonsoft.Json.JsonProperty("ignorePadding", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? IgnorePadding { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Color { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Width { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("style", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Style { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Spacing")]
public partial class VisualConfigurationSpacing
{
    [Newtonsoft.Json.JsonProperty("customizeSpacing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? CustomizeSpacing { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("verticalSpacing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? VerticalSpacing { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("spaceBelowTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? SpaceBelowTitle { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("spaceBelowSubTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? SpaceBelowSubTitle { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("spaceBelowTitleArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? SpaceBelowTitleArea { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Background")]
public partial class VisualConfigurationBackground
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Color { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("transparency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Transparency { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Padding")]
public partial class VisualConfigurationPadding
{
    [Newtonsoft.Json.JsonProperty("top", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Top { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bottom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bottom { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("left", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Left { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("right", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Right { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:LockAspect")]
public partial class VisualConfigurationLockAspect
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerGeneralFormattingObjects")]
public partial class VisualConfigurationVisualContainerGeneralFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("x", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? X { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("y", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Y { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Width { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Height { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("altText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? AltText { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("allowBinnedLineSample", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? AllowBinnedLineSample { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("allowOverlappingPointsSample", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? AllowOverlappingPointsSample { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("keepLayerOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? KeepLayerOrder { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:Border")]
public partial class VisualConfigurationBorder
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Color { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("radius", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Radius { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Width { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:DropShadow")]
public partial class VisualConfigurationDropShadow
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("preset", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Preset { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("position", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Position { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Color { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("transparency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Transparency { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("shadowSpread", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShadowSpread { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("shadowBlur", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShadowBlur { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("angle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Angle { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("shadowDistance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShadowDistance { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualLink")]
public partial class VisualConfigurationVisualLink
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Type { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bookmark", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bookmark { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("disabledTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? DisabledTooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("drillthroughSection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? DrillthroughSection { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("enabledTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? EnabledTooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("qna", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Qna { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("suppressDefaultTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? SuppressDefaultTooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDefaultTooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDefaultTooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("navigationSection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? NavigationSection { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("tooltip", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Tooltip { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("tooltipPlaceholderText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? TooltipPlaceholderText { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("webUrl", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? WebUrl { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualTooltip")]
public partial class VisualConfigurationVisualTooltip
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Type { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("section", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Section { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("titleFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? TitleFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("valueFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ValueFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontSize { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bold { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("italic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Italic { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("underline", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Underline { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontFamily", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontFamily { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("transparency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Transparency { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("actionFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ActionFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("themedTitleFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ThemedTitleFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("themedBackground", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ThemedBackground { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("themedValueFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ThemedValueFontColor { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:StylePreset")]
public partial class VisualConfigurationStylePreset
{
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Name { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualHeader")]
public partial class VisualConfigurationVisualHeader
{
    [Newtonsoft.Json.JsonProperty("show", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Show { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("border", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Border { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("transparency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Transparency { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("foreground", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Foreground { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showVisualInformationButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowVisualInformationButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showVisualWarningButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowVisualWarningButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showVisualErrorButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowVisualErrorButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDrillRoleSelector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDrillRoleSelector { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDrillUpButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDrillUpButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDrillToggleButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDrillToggleButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDrillDownLevelButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDrillDownLevelButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showDrillDownExpandButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowDrillDownExpandButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showPinButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowPinButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showFilterRestatementButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowFilterRestatementButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showFocusModeButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowFocusModeButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showCopyVisualImageButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowCopyVisualImageButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showSeeDataLayoutToggleButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowSeeDataLayoutToggleButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showOptionsMenu", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowOptionsMenu { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showCommentButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowCommentButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showTooltipButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowTooltipButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showPersonalizeVisualButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowPersonalizeVisualButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showSmartNarrativeButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowSmartNarrativeButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showSetAlertButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowSetAlertButton { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("showFollowVisualButton", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ShowFollowVisualButton { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualHeaderTooltip")]
public partial class VisualConfigurationVisualHeaderTooltip
{
    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Type { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("section", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Section { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Text { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("titleFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? TitleFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontSize", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontSize { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("fontFamily", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? FontFamily { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("bold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Bold { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("italic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Italic { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("underline", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Underline { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("transparency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? Transparency { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("themedTitleFontColor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ThemedTitleFontColor { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("themedBackground", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken? ThemedBackground { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualSyncGroup")]
public partial class VisualConfigurationVisualSyncGroup
{
    /// <summary>
    /// Unique name for the sync group.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("groupName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string GroupName { get; set; } = default!;

    /// <summary>
    /// Should synced visuals update when fields change.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("fieldChanges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? FieldChanges { get; set; } = default!;

    /// <summary>
    /// Should synced visuals update when filters change.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterChanges", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? FilterChanges { get; set; } = default!;


}

/// <summary>
/// Defines the configuration of visuals.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json")]
public partial class VisualConfiguration
{
    /// <summary>
    /// Name of the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("visualType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string VisualType { get; set; } = default!;

    /// <summary>
    /// VisualType is automatically picked by the system based on the data used in the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("autoSelectVisualType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? AutoSelectVisualType { get; set; } = default!;

    /// <summary>
    /// Defines the data to be plotted in the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("query", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationQuery? Query { get; set; } = default!;

    /// <summary>
    /// Defines the specific data points that are expanded.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("expansionStates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualConfigurationExpansionState>? ExpansionStates { get; set; } = default!;

    /// <summary>
    /// Specifies the formatting to be set for different "objects" of the visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("objects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<DataViewObjectDefinition>>? Objects { get; set; } = default!;

    /// <summary>
    /// Specifies the formatting to be set for different "objects" of the container.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("visualContainerObjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationVisualContainerFormattingObjects? VisualContainerObjects { get; set; } = default!;

    /// <summary>
    /// Defines the sync group that this visual is part of.
    /// <br/>Only applies to slicer visuals.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("syncGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfigurationVisualSyncGroup? SyncGroup { get; set; } = default!;

    /// <summary>
    /// When another visual is drilled, if visual interactions are enabled between the two visuals,
    /// <br/>then this property specifies if that drill should be applied as a filter to this visual.
    /// <br/>Overrides the default setting of the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("drillFilterOtherVisuals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool? DrillFilterOtherVisuals { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/title")]
public partial class VisualConfigurationVisualContainerFormattingObjectsTitle
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationTitle Properties { get; set; } = new VisualConfigurationTitle();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/subTitle")]
public partial class VisualConfigurationVisualContainerFormattingObjectsSubTitle
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationSubTitle Properties { get; set; } = new VisualConfigurationSubTitle();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/divider")]
public partial class VisualConfigurationVisualContainerFormattingObjectsDivider
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationDivider Properties { get; set; } = new VisualConfigurationDivider();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/spacing")]
public partial class VisualConfigurationVisualContainerFormattingObjectsSpacing
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationSpacing Properties { get; set; } = new VisualConfigurationSpacing();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/background")]
public partial class VisualConfigurationVisualContainerFormattingObjectsBackground
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationBackground Properties { get; set; } = new VisualConfigurationBackground();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/padding")]
public partial class VisualConfigurationVisualContainerFormattingObjectsPadding
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationPadding Properties { get; set; } = new VisualConfigurationPadding();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/lockAspect")]
public partial class VisualConfigurationVisualContainerFormattingObjectsLockAspect
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationLockAspect Properties { get; set; } = new VisualConfigurationLockAspect();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/general")]
public partial class VisualConfigurationVisualContainerFormattingObjectsGeneral
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationVisualContainerGeneralFormattingObjects Properties { get; set; } = new VisualConfigurationVisualContainerGeneralFormattingObjects();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/border")]
public partial class VisualConfigurationVisualContainerFormattingObjectsBorder
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationBorder Properties { get; set; } = new VisualConfigurationBorder();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/dropShadow")]
public partial class VisualConfigurationVisualContainerFormattingObjectsDropShadow
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationDropShadow Properties { get; set; } = new VisualConfigurationDropShadow();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/visualLink")]
public partial class VisualConfigurationVisualContainerFormattingObjectsVisualLink
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationVisualLink Properties { get; set; } = new VisualConfigurationVisualLink();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/visualTooltip")]
public partial class VisualConfigurationVisualContainerFormattingObjectsVisualTooltip
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationVisualTooltip Properties { get; set; } = new VisualConfigurationVisualTooltip();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/stylePreset")]
public partial class VisualConfigurationVisualContainerFormattingObjectsStylePreset
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationStylePreset Properties { get; set; } = new VisualConfigurationStylePreset();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/visualHeader")]
public partial class VisualConfigurationVisualContainerFormattingObjectsVisualHeader
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationVisualHeader Properties { get; set; } = new VisualConfigurationVisualHeader();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.1.0+Branch.main.Sha.20b425801c5e5ce25afea6ff55befe43818af959.20b425801c5e5ce25afea6ff55befe43818af959, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualConfiguration/1.7.0/schema.embedded.json", "definitions:VisualContainerFormattingObjects/visualHeaderTooltip")]
public partial class VisualConfigurationVisualContainerFormattingObjectsVisualHeaderTooltip
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector? Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationVisualHeaderTooltip Properties { get; set; } = new VisualConfigurationVisualHeaderTooltip();


}