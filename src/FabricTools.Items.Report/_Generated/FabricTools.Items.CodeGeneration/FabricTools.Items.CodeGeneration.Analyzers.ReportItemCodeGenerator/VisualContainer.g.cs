//----------------------
// <auto-generated>
//     Generated using FabricTools.Items.CodeGeneration 1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0) (http://github.com/FabricTools)
// </auto-generated>
//----------------------


#nullable enable


namespace FabricTools.Items.Report.Definitions;

#pragma warning disable // Disable all warnings

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualContainerPosition")]
public partial class VisualContainerPosition
{
    /// <summary>
    /// Horizontal position of the left edge of the visual.
    /// <br/>Should be between 0 and width of the containing page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("x", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double X { get; set; } = default!;

    /// <summary>
    /// Vertical position of the top edge of the visual.
    /// <br/>Should be between 0 and height of the containing page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("y", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Y { get; set; } = default!;

    /// <summary>
    /// Defines the stacking order for the visual.
    /// <br/>Higher z-index visuals are shown on top of the lower ones.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("z", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Z { get; set; } = default!;

    /// <summary>
    /// Height of the visual.
    /// <br/>y + height should be less than the height of the containing page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Height { get; set; } = default!;

    /// <summary>
    /// Width of the visual.
    /// <br/>x + width should be less than the width of the containing page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Width { get; set; } = default!;

    /// <summary>
    /// Defines the selection order for this visual when using keyboard (tab key)
    /// <br/>to navigate the visuals on the containing page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("tabOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double TabOrder { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("angle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Angle { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupConfig")]
public partial class VisualContainerVisualGroupConfig
{
    /// <summary>
    /// Display name for the group.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string DisplayName { get; set; } = default!;

    /// <summary>
    /// Defines how the visuals are organized inside this group.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("groupMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public VisualContainerGroupLayoutMode GroupMode { get; set; } = default!;

    /// <summary>
    /// Specifies the formatting to be set for different "objects" of this group.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("objects", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualContainerVisualGroupFormattingObjects Objects { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:GroupLayoutMode")]
public enum VisualContainerGroupLayoutMode
{

    [System.Runtime.Serialization.EnumMember(Value = @"ScaleMode")]
    /// <summary>Visuals are scaled as group resizes to preserve the aspect ratio and avoid scrolling.</summary>
    ScaleMode,

    [System.Runtime.Serialization.EnumMember(Value = @"ScrollMode")]
    /// <summary>Visuals are not resized, if the containing box for group is smaller than the space
    /// <br/>needed for visuals, then scrollbar is added.</summary>
    ScrollMode,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupFormattingObjects")]
public partial class VisualContainerVisualGroupFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("background", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualContainerVisualGroupFormattingObjectsBackground> Background { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("lockAspect", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualContainerVisualGroupFormattingObjectsLockAspect> LockAspect { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("general", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualContainerVisualGroupFormattingObjectsGeneral> General { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupGeneralFormattingObjects")]
public partial class VisualContainerVisualGroupGeneralFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("x", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken X { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("y", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken Y { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken Width { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken Height { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("altText", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken AltText { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:Annotation")]
public partial class VisualContainerAnnotation
{
    /// <summary>
    /// Unique name for the annotation.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// A value for this annotation.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Value { get; set; } = default!;


}

/// <summary>
/// Defines a single visual or visual group on a report page.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json")]
public partial class VisualContainer
{
    /// <summary>
    /// Defines the schema to use for an item.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Schema { get; set; } = "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json";

    /// <summary>
    /// A unique identifier for the visual across the whole page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [System.ComponentModel.DataAnnotations.StringLength(50)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// Defines where the visual is position on the page and how big it should be, along
    /// <br/>with z-index (stacking) for that visual.
    /// <br/>Also defines the order in which visuals are navigated when using just keyboard (tabOrder).
    /// </summary>
    [Newtonsoft.Json.JsonProperty("position", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualContainerPosition Position { get; set; } = new VisualContainerPosition();

    /// <summary>
    /// Defines a chart to be shown inside of this container.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("visual", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualConfiguration Visual { get; set; } = default!;

    /// <summary>
    /// Defines that this container should be used as a grouping container.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("visualGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualContainerVisualGroupConfig VisualGroup { get; set; } = default!;

    /// <summary>
    /// Name of the parent group (visual container), if it is part of one.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("parentGroupName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string ParentGroupName { get; set; } = default!;

    /// <summary>
    /// Filters that apply to all this visual - on top of the filters defined for the report and page.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterConfig", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterConfiguration FilterConfig { get; set; } = default!;

    /// <summary>
    /// Marks the visual as hidden.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isHidden", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsHidden { get; set; } = default!;

    /// <summary>
    /// Additional information to be saved (for example comments, readme, etc) for this visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("annotations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<VisualContainerAnnotation> Annotations { get; set; } = default!;

    /// <summary>
    /// Source of creation of this visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("howCreated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public VisualContainerHowCreated HowCreated { get; set; } = default!;



    private System.Collections.Generic.IDictionary<string, object>? _additionalProperties;

    [Newtonsoft.Json.JsonExtensionData]
    public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
    {
        get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
        set { _additionalProperties = value; }
    }

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupFormattingObjects/background")]
public partial class VisualContainerVisualGroupFormattingObjectsBackground
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationBackground Properties { get; set; } = new VisualConfigurationBackground();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupFormattingObjects/lockAspect")]
public partial class VisualContainerVisualGroupFormattingObjectsLockAspect
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualConfigurationLockAspect Properties { get; set; } = new VisualConfigurationLockAspect();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "definitions:VisualGroupFormattingObjects/general")]
public partial class VisualContainerVisualGroupFormattingObjectsGeneral
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public VisualContainerVisualGroupGeneralFormattingObjects Properties { get; set; } = new VisualContainerVisualGroupGeneralFormattingObjects();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-54+Branch.main.Sha.a1360a683aa4474dcf4ea6e3152e0be355b399d4.a1360a683aa4474dcf4ea6e3152e0be355b399d4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/visualContainer/1.7.0/schema.json", "howCreated")]
public enum VisualContainerHowCreated
{

    [System.Runtime.Serialization.EnumMember(Value = @"Default")]
    /// <summary>Used when it doesn't fall in any of the buckets below.</summary>
    Default,

    [System.Runtime.Serialization.EnumMember(Value = @"Copilot")]
    /// <summary>Created by copilot.</summary>
    Copilot,

    [System.Runtime.Serialization.EnumMember(Value = @"CheckboxTickedInFieldList")]
    /// <summary>Selecting data from field list.</summary>
    CheckboxTickedInFieldList,

    [System.Runtime.Serialization.EnumMember(Value = @"DraggedToCanvas")]
    /// <summary>Dragging data from field list to the canvas.</summary>
    DraggedToCanvas,

    [System.Runtime.Serialization.EnumMember(Value = @"VisualTypeIconClicked")]
    /// <summary>Clicking a specific visual icon in visualizations list.</summary>
    VisualTypeIconClicked,

    [System.Runtime.Serialization.EnumMember(Value = @"DraggedToFieldWell")]
    /// <summary>Dragging data from field list to field wells.</summary>
    DraggedToFieldWell,

    [System.Runtime.Serialization.EnumMember(Value = @"InsertVisualButton")]
    /// <summary>Clicking the "Insert visual" button in ribbon.</summary>
    InsertVisualButton,

    [System.Runtime.Serialization.EnumMember(Value = @"WhatIfParameterControl")]
    /// <summary>Automatically by what-if parameter.</summary>
    WhatIfParameterControl,

    [System.Runtime.Serialization.EnumMember(Value = @"QnaAppBar")]
    /// <summary>Ask a question in app bar.</summary>
    QnaAppBar,

    [System.Runtime.Serialization.EnumMember(Value = @"QnaDoubleClick")]
    /// <summary>Double clicking on the canvas to generate a Q&amp;A visual.</summary>
    QnaDoubleClick,

    [System.Runtime.Serialization.EnumMember(Value = @"QnaKeyboardShortcut")]
    /// <summary>Use keyboard shortcut for Q&amp;A visual.</summary>
    QnaKeyboardShortcut,

    [System.Runtime.Serialization.EnumMember(Value = @"FieldParameterControl")]
    /// <summary>Automatically by field parameters.</summary>
    FieldParameterControl,

    [System.Runtime.Serialization.EnumMember(Value = @"CanvasBackgroundContextMenu")]
    /// <summary>Using on-object context menu for the canvas.</summary>
    CanvasBackgroundContextMenu,

    [System.Runtime.Serialization.EnumMember(Value = @"ContextMenuPaste")]
    /// <summary>By using paste from context manu.</summary>
    ContextMenuPaste,

    [System.Runtime.Serialization.EnumMember(Value = @"CopyPaste")]
    /// <summary>By using copy paste.</summary>
    CopyPaste,

    [System.Runtime.Serialization.EnumMember(Value = @"SummarizeVisualContainer")]
    /// <summary>By using context menu Summarize.</summary>
    SummarizeVisualContainer,

}