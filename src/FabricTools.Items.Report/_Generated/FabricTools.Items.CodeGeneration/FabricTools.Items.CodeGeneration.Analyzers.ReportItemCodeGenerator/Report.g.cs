//----------------------
// <auto-generated>
//     Generated using FabricTools.Items.CodeGeneration 1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0) (http://github.com/FabricTools)
// </auto-generated>
//----------------------


#nullable enable


namespace FabricTools.Items.Report.Definitions;

#pragma warning disable // Disable all warnings

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ThemeCollection")]
public partial class ReportThemeCollection
{
    /// <summary>
    /// Defines the base monthly release themes shipped with Power BI.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("baseTheme", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportThemeMetadata BaseTheme { get; set; } = default!;

    /// <summary>
    /// Defines a custom theme that is applied on top of the base theme.
    /// <br/>Properties not defined in the custom theme will fallback to using the base theme.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("customTheme", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportThemeMetadata CustomTheme { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ThemeMetadata")]
public partial class ReportThemeMetadata
{
    /// <summary>
    /// Name of the theme.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// Version when the theme was added to the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("reportVersionAtImport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string ReportVersionAtImport { get; set; } = default!;

    /// <summary>
    /// Built-in or user specific custom theme.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public ReportThemeResourcePackageType Type { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ThemeResourcePackageType")]
public enum ReportThemeResourcePackageType
{

    [System.Runtime.Serialization.EnumMember(Value = @"RegisteredResources")]
    /// <summary>Additional resources not bundled as part of the Power BI application.</summary>
    RegisteredResources,

    [System.Runtime.Serialization.EnumMember(Value = @"SharedResources")]
    /// <summary>Resources bundled as part of the Power BI applications.</summary>
    SharedResources,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:LayoutOptimization")]
public enum ReportLayoutOptimization
{

    [System.Runtime.Serialization.EnumMember(Value = @"None")]
    /// <summary>Report doesn't contain any mobile content.</summary>
    None,

    [System.Runtime.Serialization.EnumMember(Value = @"PhonePortrait")]
    /// <summary>Report has some mobile content.</summary>
    PhonePortrait,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterConfig")]
public partial class ReportFilterConfig
{
    /// <summary>
    /// Defines the definitions and metadata for the filters.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filters", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportFilterContainer> Filters { get; set; } = default!;

    /// <summary>
    /// Defines how the filters sorted - by name or custom sorting
    /// <br/>If custom sorting, then ordinal property of every filter is used as the sort order,
    /// <br/>filters where ordinal is skipped will be shown at the end; ordering will fallback to display name of the field.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterSortOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFilterConfigFilterSortOrder FilterSortOrder { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainer")]
public partial class ReportFilterContainer
{
    /// <summary>
    /// A unique name (across the whole report definition) defined for this filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// An alternate name to use when displaying this filter - by default the display name of the field will be used, if there is no field or display name,
    /// <br/>then restatement of the filter will be shown. Only applies to certain filter types.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("displayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string DisplayName { get; set; } = default!;

    /// <summary>
    /// Defines the ordering of this filter w.r.t. other filters - only applies when Custom sort order is set.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("ordinal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Ordinal { get; set; } = default!;

    /// <summary>
    /// Defines the field from your data that is filtered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("field", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public QueryExpressionContainer Field { get; set; } = default!;

    /// <summary>
    /// The type of a filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFilterContainerType Type { get; set; } = default!;

    /// <summary>
    /// Defines the actual filter definition - it is dependent on the type of filter.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public FilterDefinition Filter { get; set; } = default!;

    /// <summary>
    /// A custom restatement to show for the filter - only applies to Passthrough filter type. For all other filters, a restatement is generated based on the filter definition.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("restatement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string Restatement { get; set; } = default!;

    /// <summary>
    /// Specifies how this filter was first created.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("howCreated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFilterContainerHowCreated HowCreated { get; set; } = default!;

    /// <summary>
    /// Defines whether to hide this filter when viewing the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isHiddenInViewMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsHiddenInViewMode { get; set; } = default!;

    /// <summary>
    /// Defines whether the filter value can be changed when viewing the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isLockedInViewMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsLockedInViewMode { get; set; } = default!;

    /// <summary>
    /// Formatting for different "objects" of a filter card
    /// </summary>
    [Newtonsoft.Json.JsonProperty("objects", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFilterContainerFormattingObjects Objects { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainerFormattingObjects")]
public partial class ReportFilterContainerFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("general", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportFilterContainerFormattingObjectsGeneral> General { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainerFormattingObjectsProperties")]
public partial class ReportFilterContainerFormattingObjectsProperties
{
    [Newtonsoft.Json.JsonProperty("requireSingleSelect", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken RequireSingleSelect { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("isInvertedSelectionMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken IsInvertedSelectionMode { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ReportFormattingObjects")]
public partial class ReportFormattingObjects
{
    [Newtonsoft.Json.JsonProperty("outspacePane", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportFormattingObjectsOutspacePane> OutspacePane { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("section", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportFormattingObjectsSection> Section { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:OutspacePane")]
public partial class ReportOutspacePane
{
    [Newtonsoft.Json.JsonProperty("expanded", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken Expanded { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("visible", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken Visible { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:Section")]
public partial class ReportSection
{
    [Newtonsoft.Json.JsonProperty("verticalAlignment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Newtonsoft.Json.Linq.JToken VerticalAlignment { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ResourcePackage")]
public partial class ReportResourcePackage
{
    [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Id { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public ReportResourcePackageType Type { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("items", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public System.Collections.Generic.ICollection<ReportResourcePackageItem> Items { get; set; } = new System.Collections.ObjectModel.Collection<ReportResourcePackageItem>();

    [Newtonsoft.Json.JsonProperty("disabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool Disabled { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ResourcePackageType")]
public enum ReportResourcePackageType
{

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisual")]
    /// <summary>CustomVisual</summary>
    CustomVisual,

    [System.Runtime.Serialization.EnumMember(Value = @"RegisteredResources")]
    /// <summary>RegisteredResources</summary>
    RegisteredResources,

    [System.Runtime.Serialization.EnumMember(Value = @"SharedResources")]
    /// <summary>SharedResources</summary>
    SharedResources,

    [System.Runtime.Serialization.EnumMember(Value = @"OrganizationalStoreCustomVisual")]
    /// <summary>OrganizationalStoreCustomVisual</summary>
    OrganizationalStoreCustomVisual,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ResourcePackageItem")]
public partial class ReportResourcePackageItem
{
    [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public double Id { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("path", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Path { get; set; } = default!;

    [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public ReportResourcePackageItemType Type { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ResourcePackageItemType")]
public enum ReportResourcePackageItemType
{

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualJavascript")]
    /// <summary>CustomVisualJavascript</summary>
    CustomVisualJavascript,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualsCss")]
    /// <summary>CustomVisualsCss</summary>
    CustomVisualsCss,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualScreenshot")]
    /// <summary>CustomVisualScreenshot</summary>
    CustomVisualScreenshot,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualIcon")]
    /// <summary>CustomVisualIcon</summary>
    CustomVisualIcon,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualWatermark")]
    /// <summary>CustomVisualWatermark</summary>
    CustomVisualWatermark,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomVisualMetadata")]
    /// <summary>CustomVisualMetadata</summary>
    CustomVisualMetadata,

    [System.Runtime.Serialization.EnumMember(Value = @"Image")]
    /// <summary>Image</summary>
    Image,

    [System.Runtime.Serialization.EnumMember(Value = @"ShapeMap")]
    /// <summary>ShapeMap</summary>
    ShapeMap,

    [System.Runtime.Serialization.EnumMember(Value = @"CustomTheme")]
    /// <summary>CustomTheme</summary>
    CustomTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"BaseTheme")]
    /// <summary>BaseTheme</summary>
    BaseTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"DashboardTheme")]
    /// <summary>DashboardTheme</summary>
    DashboardTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"DashboardBaseTheme")]
    /// <summary>DashboardBaseTheme</summary>
    DashboardBaseTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"HighContrastTheme")]
    /// <summary>HighContrastTheme</summary>
    HighContrastTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"AppNavigation")]
    /// <summary>AppNavigation</summary>
    AppNavigation,

    [System.Runtime.Serialization.EnumMember(Value = @"AppTheme")]
    /// <summary>AppTheme</summary>
    AppTheme,

    [System.Runtime.Serialization.EnumMember(Value = @"AppBaseTheme")]
    /// <summary>AppBaseTheme</summary>
    AppBaseTheme,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:OrganizationCustomVisual")]
public partial class ReportOrganizationCustomVisual
{
    /// <summary>
    /// Name of the organization custom visual.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// Path where the custom visual is stored.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("path", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Path { get; set; } = default!;

    /// <summary>
    /// Signifies if the custom visual is disabled by the organization.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("disabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool Disabled { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:Annotation")]
public partial class ReportAnnotation
{
    /// <summary>
    /// Unique name for the annotation.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Name { get; set; } = default!;

    /// <summary>
    /// A value for this annotation.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Value { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ExplorationSettings")]
public partial class ReportExplorationSettings
{
    /// <summary>
    /// Disable saving state of changes to a report as report viewers modify slicers and filters.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isPersistentUserStateDisabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsPersistentUserStateDisabled { get; set; } = default!;

    /// <summary>
    /// Hide visual container header in view mode of the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("hideVisualContainerHeader", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool HideVisualContainerHeader { get; set; } = default!;

    /// <summary>
    /// Use the new visual container header that is formattable.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("useStylableVisualContainerHeader", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool UseStylableVisualContainerHeader { get; set; } = default!;

    /// <summary>
    /// When exporting data, what should be exported.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("exportDataMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportExplorationSettingsExportDataMode ExportDataMode { get; set; } = default!;

    /// <summary>
    /// Commenting is disabled for this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isReportAnnotationsDisabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsReportAnnotationsDisabled { get; set; } = default!;

    /// <summary>
    /// When selecting data points on a visual, it will result in apply that selection as a filter instead of a highlight on other visuals.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("defaultFilterActionIsDataFilter", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool DefaultFilterActionIsDataFilter { get; set; } = default!;

    /// <summary>
    /// When another visual is drilled, if visual interactions are enabled between the two visuals, then this property specifies if that drill should be applied as a filter to this visual.
    /// <br/>Can be overridden by setting on individual visuals.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("defaultDrillFilterOtherVisuals", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool DefaultDrillFilterOtherVisuals { get; set; } = default!;

    /// <summary>
    /// Allow drill-through from other reports to this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("useCrossReportDrillthrough", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool UseCrossReportDrillthrough { get; set; } = default!;

    /// <summary>
    /// Disables changing the type of filter in view mode.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("allowChangeFilterTypes", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool AllowChangeFilterTypes { get; set; } = default!;

    /// <summary>
    /// Allows personalize this visual for the report in view mode.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("allowInlineExploration", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool AllowInlineExploration { get; set; } = default!;

    /// <summary>
    /// Uses better tooltips for the visuals in this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("useEnhancedTooltips", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool UseEnhancedTooltips { get; set; } = default!;

    /// <summary>
    /// If enabled, the tooltip will scale to match canvas zoom.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("useScaledTooltips", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool UseScaledTooltips { get; set; } = default!;

    /// <summary>
    /// Hide the filter pane in view mode.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterPaneHiddenInEditMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool FilterPaneHiddenInEditMode { get; set; } = default!;

    /// <summary>
    /// Disables the search bar in filter pane.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("disableFilterPaneSearch", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool DisableFilterPaneSearch { get; set; } = default!;

    /// <summary>
    /// Default location where the page navigator is shown.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("pagesPosition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportExplorationSettingsPagesPosition PagesPosition { get; set; } = default!;

    /// <summary>
    /// Allow generating insights for the report in the background on data refresh.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("allowAutomatedInsightsNotification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool AllowAutomatedInsightsNotification { get; set; } = default!;

    /// <summary>
    /// Show the default aggregate in display names for summarized data.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("useDefaultAggregateDisplayName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool UseDefaultAggregateDisplayName { get; set; } = default!;

    /// <summary>
    /// Enables developer mode for testing private custom visuals.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("enableDeveloperMode", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool EnableDeveloperMode { get; set; } = default!;

    /// <summary>
    /// Allows pausing queries while making changes to a visual, so every change doesn't trigger a query.
    /// <br/>Particularly useful with slow data sources.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("pauseQueries", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool PauseQueries { get; set; } = default!;

    /// <summary>
    /// Describes the limitations for how long and how much compute a single query can be allowed to consume.
    /// <br/>More details for different options: https://learn.microsoft.com/en-us/power-bi/create-reports/desktop-set-visual-query-limits
    /// </summary>
    [Newtonsoft.Json.JsonProperty("queryLimitOption", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportExplorationSettingsQueryLimitOption QueryLimitOption { get; set; } = default!;

    /// <summary>
    /// If custom query limit is applied, this value defines the memory limit.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("customMemoryLimit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string CustomMemoryLimit { get; set; } = default!;

    /// <summary>
    /// If custom query limit is applied, this value defines the timeout limit.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("customTimeoutLimit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string CustomTimeoutLimit { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ExplorationSlowDataSourceSettings")]
public partial class ReportExplorationSlowDataSourceSettings
{
    /// <summary>
    /// Disable cross highlights.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isCrossHighlightingDisabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsCrossHighlightingDisabled { get; set; } = default!;

    /// <summary>
    /// Adds 'apply' button to slicers.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isSlicerSelectionsButtonEnabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsSlicerSelectionsButtonEnabled { get; set; } = default!;

    /// <summary>
    /// Adds 'apply' button to filters.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isFilterSelectionsButtonEnabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsFilterSelectionsButtonEnabled { get; set; } = default!;

    /// <summary>
    /// Adds 'apply' button to field changes.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isFieldWellButtonEnabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsFieldWellButtonEnabled { get; set; } = default!;

    /// <summary>
    /// Adds an apply all button.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("isApplyAllButtonEnabled", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public bool IsApplyAllButtonEnabled { get; set; } = default!;


}

/// <summary>
/// Defines a report and its pages, visuals, settings, and additional information.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json")]
public partial class Report
{
    /// <summary>
    /// Defines the schema to use for an item.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("$schema", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    public string Schema { get; set; } = "https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json";

    /// <summary>
    /// Define a theme (built-in and/or a custom theme) to be used for this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("themeCollection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public ReportThemeCollection ThemeCollection { get; set; } = new ReportThemeCollection();

    /// <summary>
    /// Is the report optimized for mobile consumption.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("layoutOptimization", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public ReportLayoutOptimization LayoutOptimization { get; set; } = default!;

    /// <summary>
    /// Filters that apply to the entire report (all pages and all visuals).
    /// </summary>
    [Newtonsoft.Json.JsonProperty("filterConfig", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFilterConfig FilterConfig { get; set; } = default!;

    /// <summary>
    /// Specifies the formatting to be set for different "objects" of a report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("objects", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportFormattingObjects Objects { get; set; } = default!;

    /// <summary>
    /// Defines how the report was created.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("reportSource", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportReportSource ReportSource { get; set; } = default!;

    /// <summary>
    /// Names of the custom visuals used in this report from AppSource.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("publicCustomVisuals", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<string> PublicCustomVisuals { get; set; } = default!;

    /// <summary>
    /// Set of resources used within this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("resourcePackages", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportResourcePackage> ResourcePackages { get; set; } = default!;

    /// <summary>
    /// Names and metadata of the organization approved custom visuals used in the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("organizationCustomVisuals", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportOrganizationCustomVisual> OrganizationCustomVisuals { get; set; } = default!;

    /// <summary>
    /// Additional information to be saved (for example comments, readme, etc) for this report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("annotations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public System.Collections.Generic.ICollection<ReportAnnotation> Annotations { get; set; } = default!;

    /// <summary>
    /// A string containing the state of any variables from the underlying direct query data source that should be overridden when rendering this content.
    /// <br/>Data source variables do not supply values for M parameters in the semantic model. Instead, data source variables are applied when accessing the underlying direct query source.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("dataSourceVariables", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public string DataSourceVariables { get; set; } = default!;

    /// <summary>
    /// Settings for the report.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("settings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportExplorationSettings Settings { get; set; } = default!;

    /// <summary>
    /// Settings for slow data sources (for example turning all apply all button for filters).
    /// </summary>
    [Newtonsoft.Json.JsonProperty("slowDataSourceSettings", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public ReportExplorationSlowDataSourceSettings SlowDataSourceSettings { get; set; } = default!;


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterConfig/filterSortOrder")]
public enum ReportFilterConfigFilterSortOrder
{

    [System.Runtime.Serialization.EnumMember(Value = @"Ascending")]
    /// <summary>Sorted ascending by display name of the filter field.</summary>
    Ascending,

    [System.Runtime.Serialization.EnumMember(Value = @"Descending")]
    /// <summary>Sorted descending by display name of the filter field.</summary>
    Descending,

    [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
    /// <summary>Sorted ascending by ordinal property of filters.</summary>
    Custom,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainer/type")]
public enum ReportFilterContainerType
{

    [System.Runtime.Serialization.EnumMember(Value = @"Categorical")]
    /// <summary>Categorical</summary>
    Categorical,

    [System.Runtime.Serialization.EnumMember(Value = @"Range")]
    /// <summary>Range</summary>
    Range,

    [System.Runtime.Serialization.EnumMember(Value = @"Advanced")]
    /// <summary>Advanced</summary>
    Advanced,

    [System.Runtime.Serialization.EnumMember(Value = @"Passthrough")]
    /// <summary>Passthrough</summary>
    Passthrough,

    [System.Runtime.Serialization.EnumMember(Value = @"TopN")]
    /// <summary>TopN</summary>
    TopN,

    [System.Runtime.Serialization.EnumMember(Value = @"Include")]
    /// <summary>Include</summary>
    Include,

    [System.Runtime.Serialization.EnumMember(Value = @"Exclude")]
    /// <summary>Exclude</summary>
    Exclude,

    [System.Runtime.Serialization.EnumMember(Value = @"RelativeDate")]
    /// <summary>RelativeDate</summary>
    RelativeDate,

    [System.Runtime.Serialization.EnumMember(Value = @"Tuple")]
    /// <summary>Tuple</summary>
    Tuple,

    [System.Runtime.Serialization.EnumMember(Value = @"RelativeTime")]
    /// <summary>RelativeTime</summary>
    RelativeTime,

    [System.Runtime.Serialization.EnumMember(Value = @"VisualTopN")]
    /// <summary>VisualTopN</summary>
    VisualTopN,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainer/howCreated")]
public enum ReportFilterContainerHowCreated
{

    [System.Runtime.Serialization.EnumMember(Value = @"Auto")]
    /// <summary>Created automatically when a field is used in the visual.</summary>
    Auto,

    [System.Runtime.Serialization.EnumMember(Value = @"User")]
    /// <summary>Filters created from fields not used in a visual by the user.</summary>
    User,

    [System.Runtime.Serialization.EnumMember(Value = @"Drill")]
    /// <summary>Created when drilling down on a data point in a visual.</summary>
    Drill,

    [System.Runtime.Serialization.EnumMember(Value = @"Include")]
    /// <summary>Created by including a data point in a visual.</summary>
    Include,

    [System.Runtime.Serialization.EnumMember(Value = @"Exclude")]
    /// <summary>Created by excluding a data point from a visual.</summary>
    Exclude,

    [System.Runtime.Serialization.EnumMember(Value = @"Drillthrough")]
    /// <summary>Created by drill context that is applied to the page when using drill-through
    /// <br/>action from another page.</summary>
    Drillthrough,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:FilterContainerFormattingObjects/general")]
public partial class ReportFilterContainerFormattingObjectsGeneral
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public ReportFilterContainerFormattingObjectsProperties Properties { get; set; } = new ReportFilterContainerFormattingObjectsProperties();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ReportFormattingObjects/outspacePane")]
public partial class ReportFormattingObjectsOutspacePane
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public ReportOutspacePane Properties { get; set; } = new ReportOutspacePane();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ReportFormattingObjects/section")]
public partial class ReportFormattingObjectsSection
{
    /// <summary>
    /// Defines the scope at which to apply the formatting for this object.
    /// <br/>Can also define rules for matching highlighted values and how multiple definitions for the same property should be ordered.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("selector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    public Selector Selector { get; set; } = default!;

    /// <summary>
    /// Describes the properties of the object to apply formatting changes to.
    /// </summary>
    [Newtonsoft.Json.JsonProperty("properties", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
    [System.ComponentModel.DataAnnotations.Required]
    public ReportSection Properties { get; set; } = new ReportSection();


}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ExplorationSettings/exportDataMode")]
public enum ReportExplorationSettingsExportDataMode
{

    [System.Runtime.Serialization.EnumMember(Value = @"AllowSummarized")]
    /// <summary>Only allow summarized data.</summary>
    AllowSummarized,

    [System.Runtime.Serialization.EnumMember(Value = @"AllowSummarizedAndUnderlying")]
    /// <summary>Allow underlying and summarized data.</summary>
    AllowSummarizedAndUnderlying,

    [System.Runtime.Serialization.EnumMember(Value = @"None")]
    /// <summary>Don't allow exporting data.</summary>
    None,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ExplorationSettings/pagesPosition")]
public enum ReportExplorationSettingsPagesPosition
{

    [System.Runtime.Serialization.EnumMember(Value = @"PagesPane")]
    /// <summary>In a pane next to the report.</summary>
    PagesPane,

    [System.Runtime.Serialization.EnumMember(Value = @"Bottom")]
    /// <summary>In a toolbar below the report.</summary>
    Bottom,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "definitions:ExplorationSettings/queryLimitOption")]
public enum ReportExplorationSettingsQueryLimitOption
{

    [System.Runtime.Serialization.EnumMember(Value = @"None")]
    /// <summary>None</summary>
    None,

    [System.Runtime.Serialization.EnumMember(Value = @"Shared")]
    /// <summary>Shared</summary>
    Shared,

    [System.Runtime.Serialization.EnumMember(Value = @"Premium")]
    /// <summary>Premium</summary>
    Premium,

    [System.Runtime.Serialization.EnumMember(Value = @"SQLServerAS")]
    /// <summary>SQLServerAS</summary>
    SQLServerAS,

    [System.Runtime.Serialization.EnumMember(Value = @"AzureAS")]
    /// <summary>AzureAS</summary>
    AzureAS,

    [System.Runtime.Serialization.EnumMember(Value = @"Custom")]
    /// <summary>Custom</summary>
    Custom,

    [System.Runtime.Serialization.EnumMember(Value = @"Auto")]
    /// <summary>Auto</summary>
    Auto,

}

[System.CodeDom.Compiler.GeneratedCode("FabricTools.Items.CodeGeneration", "1.0.0-48+Branch.main.Sha.e5ee63afa02697f49e23bed6be2f4d612638ddc4.e5ee63afa02697f49e23bed6be2f4d612638ddc4, NJsonSchema: 11.2.0.0 (Newtonsoft.Json v13.0.0.0)")]
[FabricTools.Items.ComponentModel.SourceSchema("https://developer.microsoft.com/json-schemas/fabric/item/report/definition/report/1.2.0/schema.json", "reportSource")]
public enum ReportReportSource
{

    [System.Runtime.Serialization.EnumMember(Value = @"Default")]
    /// <summary>A blank report generated by Power BI apps.</summary>
    Default,

    [System.Runtime.Serialization.EnumMember(Value = @"SharePoint")]
    /// <summary>A quick create report created from a SharePointList.</summary>
    SharePoint,

    [System.Runtime.Serialization.EnumMember(Value = @"Teams")]
    /// <summary>A quick create report created from Teams.</summary>
    Teams,

    [System.Runtime.Serialization.EnumMember(Value = @"QuickCreate")]
    /// <summary>A quick create report created from Power BI app.</summary>
    QuickCreate,

    [System.Runtime.Serialization.EnumMember(Value = @"EmbedQuickCreate")]
    /// <summary>A quick create report created from an embedded source.</summary>
    EmbedQuickCreate,

    [System.Runtime.Serialization.EnumMember(Value = @"Datamart")]
    /// <summary>A new report created from Datamart.</summary>
    Datamart,

    [System.Runtime.Serialization.EnumMember(Value = @"DataExplore")]
    /// <summary>A report generated by exporting an Exploration as a report.</summary>
    DataExplore,

}